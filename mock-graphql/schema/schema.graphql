type Query {
    searchProduct(in: SearchProductInput): [Product]
}

type Mutation {
    addProduct(in: AddProductInput): [Product]!
}

interface Node {
    id: ID!
}

input SearchProductInput {
    query: String!
}

input AddProductInput {
    id: ID!
}

type Product implements Node {
    id: ID!
    title: String!
    fullTitle: String
    vendors: [Vendor]
    offers: [Offer]
}

type Vendor implements Node {
    id: ID!
    title: String!
}

type Offer implements Node {
    id: ID!
    seller: Seller!
    price: Price!
}

type Seller implements Node {
    id: ID!
    title: String!
}

type Price implements Node {
    id: ID!
}
